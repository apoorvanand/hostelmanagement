.test_template: &test_definition
  image: registry.gitlab.com/yale-sdmp/docker-rails-react:latest

  tags:
    - yale

  services:
    - postgres:latest

  variables:
    POSTGRES_DB: gitlab_ci_test
    POSTGRES_USER: runner
    POSTGRES_PASSWORD: ""

  stage: test

  before_script:
    - ruby -v
    - which ruby
    - gem install bundler --no-ri --no-rdoc

  cache:
    paths:
      - vendor/bundle

spec:
  <<: *test_definition
  script:
    - bundle check --path vendor/bundle || bundle install --path vendor/bundle
    - cp config/database.yml.gitlab config/database.yml
    - xvfb-run -a bundle exec rake
  after_script:
    - bundle exec codeclimate-test-reporter

style:
  <<: *test_definition
  script:
    - bundle check --path vendor/bundle || bundle install --path vendor/bundle
    - cp config/database.yml.gitlab config/database.yml
    - bundle exec rake check_style 'git diff origin/master --name-status'

codequality:
  image: docker:latest
  stage: test
  variables:
    DOCKER_DRIVER: overlay
  services:
    - docker:dind
  script:
    - docker pull codeclimate/codeclimate
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -f json > codeclimate.json
  artifacts:
    paths: [codeclimate.json]

# see https://docs.gitlab.com/ee/ci/examples/dependency_scanning.html
dependency_scanning:
  image: docker:stable
  stage: test
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    paths: [gl-dependency-scanning-report.json]
